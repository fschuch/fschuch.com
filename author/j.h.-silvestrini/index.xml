<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>J.H. Silvestrini | F. Schuch</title><link>https://www.fschuch.com/author/j.h.-silvestrini/</link><atom:link href="https://www.fschuch.com/author/j.h.-silvestrini/index.xml" rel="self" type="application/rss+xml"/><description>J.H. Silvestrini</description><generator>Wowchemy (https://wowchemy.com)</generator><language>pt-br</language><lastBuildDate>Tue, 06 Jul 2021 00:00:00 +0000</lastBuildDate><image><url>https://www.fschuch.com/media/icon_hu25d0b20bf2bf90ac27c6cbd6ce22358d_22074_512x512_fill_lanczos_center_2.png</url><title>J.H. Silvestrini</title><link>https://www.fschuch.com/author/j.h.-silvestrini/</link></image><item><title>Plunging condition for particle-laden flows over sloping bottoms: three-dimensional turbulence-resolving simulations</title><link>https://www.fschuch.com/publication/2021-computers-and-geosciences/</link><pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.fschuch.com/publication/2021-computers-and-geosciences/</guid><description/></item><item><title>Um ambiente "Jupyter Sandbox" acoplado ao Xcompact3d, um código acadêmico de alta ordem para Fluidodinâmica Computacional</title><link>https://www.fschuch.com/publication/2020-jupytercon/</link><pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.fschuch.com/publication/2020-jupytercon/</guid><description>&lt;h1 id="descrição">Descrição&lt;/h1>
&lt;p>Iniciantes podem enfrentar muitas barreiras de entrada em um código acadêmico para Fluidodinâmica Computacional (CFD), por exemplo:&lt;/p>
&lt;ul>
&lt;li>A decomposição de domínio de cálculo para computação paralela em um sistema de memória distribuída;&lt;/li>
&lt;li>Programação, compilação, teste e depuração em linguagens de programação como Fortran ou C;&lt;/li>
&lt;li>O receio de estragar qualquer coisa no código fonte;&lt;/li>
&lt;li>Critérios de estabilidade de diferentes métodos numéricos;&lt;/li>
&lt;li>Falta de documentação e outros.&lt;/li>
&lt;/ul>
&lt;p>Esse trabalho visa quebrar essas barreiras ao construir uma camada Python, ou mais especificamente &lt;a href="https://jupyter.org/" target="_blank" rel="noopener">Jupyter Notebook&lt;/a>, sobre o código CFD, programado originalmente em Fortran.&lt;/p>
&lt;p>Para tanto, o código CFD de alta ordem &lt;a href="https://github.com/fschuch/Xcompact3d" target="_blank" rel="noopener">Xcompact3d&lt;/a> foi modificado para aceitar toda a configuração do escoamento sob investigação de uma fonte externa, incluindo parâmetros físicos e numéricos, condição inicial e condições de contorno, e uma geometria sólida que pode ser inserida no domínio cartesiano por meio do método das fronteiras imersas (IBM, do inglês &lt;em>Immersed Boundary Method&lt;/em>). A configuração do escoamento, por sua vez, é fornecida a partir de um &lt;a href="https://jupyter.org/" target="_blank" rel="noopener">Jupyter Notebook&lt;/a>, aproveitando a documentação embutida com células &lt;em>Markdown&lt;/em> (incluindo facilmente figuras, tabelas e equações $\LaTeX$), visualização e interatividade com &lt;em>widgets&lt;/em> e bibliotecas de plotagem, além da versatilidade e legibilidade da programação em Python. Além disso, os parâmetros de entrada podem ser verificados quanto à consistência e compatibilidade. O conhecimento prévio de &lt;a href="https://numpy.org/" target="_blank" rel="noopener">NumPy&lt;/a> e &lt;a href="https://matplotlib.org/" target="_blank" rel="noopener">Matplotlib&lt;/a> é suficiente para começar com as configurações de escoamento exemplificadas. No entanto, não há limitação para estendê-lo para ferramentas mais avançadas como &lt;a href="https://pandas.pydata.org/" target="_blank" rel="noopener">Pandas&lt;/a>, &lt;a href="http://xarray.pydata.org/" target="_blank" rel="noopener">Xarray&lt;/a>, &lt;a href="https://dask.org/" target="_blank" rel="noopener">Dask&lt;/a>, &lt;a href="http://numba.pydata.org/" target="_blank" rel="noopener">Numba&lt;/a>, &lt;a href="https://holoviews.org/" target="_blank" rel="noopener">Holoview&lt;/a>, &lt;a href="https://plotly.com/python/" target="_blank" rel="noopener">Plotly&lt;/a> e muitos outros do ecossistema Jupyter. Na verdade, o &lt;em>Jupyter CFD Sandbox&lt;/em> foi incorporado ao pacote Python &lt;a href="https://github.com/fschuch/xcompact3d_toolbox" target="_blank" rel="noopener">Xcompact3d-toolbox&lt;/a>.&lt;/p>
&lt;p>O resultado da metodologia apresentada nesse trabalho pode beneficiar usuários de diferentes níveis:&lt;/p>
&lt;ul>
&lt;li>Para alunos de fluidodinâmica computacional, oferece experiência prática direta e um local seguro para praticar e aprender;&lt;/li>
&lt;li>Para usuários avançados e desenvolvedores de código, ele funciona como uma ferramenta de prototipagem rápida, onde é possível testar conceitos e, em seguida, comparar os resultados para validar quaisquer implementações futuras no solucionador numérico.&lt;/li>
&lt;/ul>
&lt;p>Além disso, é um avanço importante em termos de reprodutibilidade de pesquisa, e pode ser portado para qualquer outro solucionador numérico, (avise-nos se você fizer isso).&lt;/p>
&lt;p>Tutoriais e diversas configurações de escoamento estão disponíveis na &lt;a href="https://xcompact3d-toolbox.readthedocs.io/en/latest/" target="_blank" rel="noopener">Documentação do Xcompact3d-toolbox&lt;/a>.&lt;/p></description></item><item><title>Simulação numérica de escoamentos estratificados por partículas em suspensão e salinidade</title><link>https://www.fschuch.com/publication/2014-eptt/</link><pubDate>Mon, 22 Sep 2014 00:00:00 +0000</pubDate><guid>https://www.fschuch.com/publication/2014-eptt/</guid><description/></item></channel></rss>